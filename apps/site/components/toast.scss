.Toast {
  z-index: 99;
  display: grid;
  padding: var(--SpacingHalf) var(--Spacing);
  margin: 0;
  border-radius: var(--Rounded);
  color: var(--TextColor);
  background-color: var(--BackgroundColor);

  transition: translate var(--AnimationDuration) var(--AnimationEase);
  isolation: isolate;
  grid-auto-flow: column;
  column-gap: var(--SpacingHalf);

  @media (prefers-color-scheme: dark) {
    border-width: calc(var(--Stroke) * 0.75);
    border-color: var(--TextColor);
  }

  @media (orientation: landscape) {
    --ToastInFromSideOffset: 25%;
    --ToastPositionY: calc(
      (-100% - var(--ToastGap)) * (var(--TotalToasts) - var(--ToastIndex) - 1)
    );
    margin-block-start: auto;
    margin-block-end: var(--Spacing);
    margin-inline-start: auto;
    margin-inline-end: var(--SpacingDouble);
    animation: ToastInFromSide var(--AnimationDuration) var(--AnimationEase);
    translate: 0 var(--ToastPositionY);

    &.ToastLeaving {
      animation: ToastOutToSide var(--AnimationDuration) var(--AnimationEase)
        forwards;
    }
  }

  .ToastClose {
    padding: 0;
    margin: 0;
    border: none;
    color: inherit;
    background: transparent;
    transition: scale var(--AnimationDuration) ease-out;

    &:hover {
      scale: 1.2;
    }

    svg {
      width: var(--SpacingHalf);
    }
  }
}

@keyframes ToastInFromSide {
  from {
    opacity: 0;
    translate: var(--ToastInFromSideOffset) var(--ToastPositionY);
  }
  to {
    opacity: 1;
    translate: 0 var(--ToastPositionY);
  }
}

@keyframes ToastOutToSide {
  from {
    opacity: 1;
    translate: 0 var(--ToastPositionY);
  }
  to {
    opacity: 0;
    translate: var(--ToastInFromSideOffset) var(--ToastPositionY);
  }
}
